# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/iio-sensor-proxy
pkgincludedir = $(includedir)/iio-sensor-proxy
pkglibdir = $(libdir)/iio-sensor-proxy
pkglibexecdir = $(libexecdir)/iio-sensor-proxy
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
sbin_PROGRAMS = iio-sensor-proxy$(EXEEXT)
noinst_PROGRAMS = fake-input-accelerometer$(EXEEXT) \
	test-mount-matrix$(EXEEXT) test-orientation$(EXEEXT) \
	$(am__EXEEXT_1)
am__append_1 = test-orientation-gtk
bin_PROGRAMS = monitor-sensor$(EXEEXT)
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_append_compile_flags.m4 \
	$(top_srcdir)/m4/ax_append_flag.m4 \
	$(top_srcdir)/m4/ax_append_link_flags.m4 \
	$(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_check_link_flag.m4 \
	$(top_srcdir)/m4/ax_compiler_flags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_cflags.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_gir.m4 \
	$(top_srcdir)/m4/ax_compiler_flags_ldflags.m4 \
	$(top_srcdir)/m4/ax_is_release.m4 \
	$(top_srcdir)/m4/ax_require_defined.m4 \
	$(top_srcdir)/m4/gtk-doc.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/pkg.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)"
am__EXEEXT_1 = test-orientation-gtk$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS) $(sbin_PROGRAMS)
am_fake_input_accelerometer_OBJECTS =  \
	fake_input_accelerometer-fake-input-accelerometer.$(OBJEXT)
fake_input_accelerometer_OBJECTS =  \
	$(am_fake_input_accelerometer_OBJECTS)
am__DEPENDENCIES_1 =
fake_input_accelerometer_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__objects_1 = iio_sensor_proxy-iio-sensor-proxy-resources.$(OBJEXT)
am_iio_sensor_proxy_OBJECTS =  \
	iio_sensor_proxy-iio-sensor-proxy.$(OBJEXT) \
	iio_sensor_proxy-orientation.$(OBJEXT) \
	iio_sensor_proxy-drv-iio-buffer-accel.$(OBJEXT) \
	iio_sensor_proxy-drv-iio-poll-accel.$(OBJEXT) \
	iio_sensor_proxy-drv-input-accel.$(OBJEXT) \
	iio_sensor_proxy-drv-fake-compass.$(OBJEXT) \
	iio_sensor_proxy-drv-fake-light.$(OBJEXT) \
	iio_sensor_proxy-drv-iio-poll-light.$(OBJEXT) \
	iio_sensor_proxy-drv-hwmon-light.$(OBJEXT) \
	iio_sensor_proxy-drv-iio-buffer-light.$(OBJEXT) \
	iio_sensor_proxy-drv-iio-buffer-compass.$(OBJEXT) \
	iio_sensor_proxy-iio-buffer-utils.$(OBJEXT) \
	iio_sensor_proxy-accel-mount-matrix.$(OBJEXT) $(am__objects_1)
iio_sensor_proxy_OBJECTS = $(am_iio_sensor_proxy_OBJECTS)
iio_sensor_proxy_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_monitor_sensor_OBJECTS = monitor_sensor-monitor-sensor.$(OBJEXT)
monitor_sensor_OBJECTS = $(am_monitor_sensor_OBJECTS)
monitor_sensor_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_test_mount_matrix_OBJECTS =  \
	test_mount_matrix-test-mount-matrix.$(OBJEXT) \
	test_mount_matrix-accel-mount-matrix.$(OBJEXT)
test_mount_matrix_OBJECTS = $(am_test_mount_matrix_OBJECTS)
test_mount_matrix_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_test_orientation_OBJECTS =  \
	test_orientation-test-orientation.$(OBJEXT) \
	test_orientation-orientation.$(OBJEXT) \
	test_orientation-accel-mount-matrix.$(OBJEXT)
test_orientation_OBJECTS = $(am_test_orientation_OBJECTS)
test_orientation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__test_orientation_gtk_SOURCES_DIST = test-orientation-gtk.c \
	orientation.c orientation.h
am_test_orientation_gtk_OBJECTS = test_orientation_gtk-test-orientation-gtk.$(OBJEXT) \
	test_orientation_gtk-orientation.$(OBJEXT)
test_orientation_gtk_OBJECTS = $(am_test_orientation_gtk_OBJECTS)
test_orientation_gtk_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(fake_input_accelerometer_SOURCES) \
	$(iio_sensor_proxy_SOURCES) $(monitor_sensor_SOURCES) \
	$(test_mount_matrix_SOURCES) $(test_orientation_SOURCES) \
	$(test_orientation_gtk_SOURCES)
DIST_SOURCES = $(fake_input_accelerometer_SOURCES) \
	$(iio_sensor_proxy_SOURCES) $(monitor_sensor_SOURCES) \
	$(test_mount_matrix_SOURCES) $(test_orientation_SOURCES) \
	$(am__test_orientation_gtk_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/build-aux/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -fPIE -pie
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DPACKAGE_NAME=\"iio-sensor-proxy\" -DPACKAGE_TARNAME=\"iio-sensor-proxy\" -DPACKAGE_VERSION=\"2.2\" -DPACKAGE_STRING=\"iio-sensor-proxy\ 2.2\" -DPACKAGE_BUGREPORT=\"hadess@hadess.net\" -DPACKAGE_URL=\"\" -DPACKAGE=\"iio-sensor-proxy\" -DVERSION=\"2.2\"
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EXEEXT = 
GDBUS_CODEGEN = /usr/bin/gdbus-codegen
GTKDOC_CHECK = gtkdoc-check.test
GTKDOC_CHECK_PATH = /usr/bin/gtkdoc-check
GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0
GTKDOC_MKPDF = /usr/bin/gtkdoc-mkpdf
GTKDOC_REBASE = /usr/bin/gtkdoc-rebase
GTK_TESTS_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/mirclient -I/usr/include/mircore -I/usr/include/mircookie -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng12 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTK_TESTS_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0
HTML_DIR = ${datadir}/gtk-doc/html
IIO_SENSOR_PROXY_CFLAGS = -pthread -I/usr/local/include/gudev-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
IIO_SENSOR_PROXY_LIBS = -L/usr/local/lib -lgio-2.0 -lgudev-1.0 -lgobject-2.0 -lglib-2.0
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/build-aux/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = iio-sensor-proxy
PACKAGE_BUGREPORT = hadess@hadess.net
PACKAGE_NAME = iio-sensor-proxy
PACKAGE_STRING = iio-sensor-proxy 2.2
PACKAGE_TARNAME = iio-sensor-proxy
PACKAGE_URL = 
PACKAGE_VERSION = 2.2
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VERSION = 2.2
WARN_CFLAGS = -fno-strict-aliasing -Wall -Wextra -Wundef -Wnested-externs -Wwrite-strings -Wpointer-arith -Wmissing-declarations -Wmissing-prototypes -Wstrict-prototypes -Wredundant-decls -Wno-unused-parameter -Wno-missing-field-initializers -Wdeclaration-after-statement -Wformat=2 -Wold-style-definition -Wcast-align -Wformat-nonliteral -Wformat-security -Wsign-compare -Wstrict-aliasing -Wshadow -Winline -Wpacked -Wmissing-format-attribute -Wmissing-noreturn -Winit-self -Wmissing-include-dirs -Wunused-but-set-variable -Warray-bounds -Wimplicit-function-declaration -Wreturn-type -Wswitch-enum -Wswitch-default -Wno-error=unused-parameter -Wno-error=missing-field-initializers
WARN_LDFLAGS = -Wl,--no-as-needed
WARN_SCANNERFLAGS =               --warn-all                                                             
abs_builddir = /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/src
abs_srcdir = /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/src
abs_top_builddir = /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified
abs_top_srcdir = /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified
ac_ct_CC = gcc
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/anthony/Documents/TAR.XZs/iio-sensor-proxy-2.2_modified/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
systemdsystemunitdir = /lib/systemd/system
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
udevrulesdir = /lib/udev/rules.d
BUILT_SOURCES = \
	iio-sensor-proxy-resources.c		\
	iio-sensor-proxy-resources.h

resource_files = $(shell glib-compile-resources --sourcedir=$(srcdir) --generate-dependencies $(srcdir)/iio-sensor-proxy.gresource.xml)
iio_sensor_proxy_SOURCES = \
	iio-sensor-proxy.c			\
	drivers.h				\
	orientation.c				\
	orientation.h				\
	drv-iio-buffer-accel.c			\
	drv-iio-poll-accel.c			\
	drv-input-accel.c			\
	drv-fake-compass.c			\
	drv-fake-light.c			\
	drv-iio-poll-light.c			\
	drv-hwmon-light.c			\
	drv-iio-buffer-light.c			\
	drv-iio-buffer-compass.c		\
	iio-buffer-utils.h			\
	iio-buffer-utils.c			\
	accel-mount-matrix.h			\
	accel-mount-matrix.c			\
	$(BUILT_SOURCES)

iio_sensor_proxy_CPPFLAGS = \
	$(IIO_SENSOR_PROXY_CFLAGS)		\
	$(WARN_CFLAGS)

iio_sensor_proxy_LDADD = $(IIO_SENSOR_PROXY_LIBS) $(LIBM)
fake_input_accelerometer_SOURCES = \
	fake-input-accelerometer.c		\
	uinput.h

fake_input_accelerometer_CPPFLAGS = \
	$(IIO_SENSOR_PROXY_CFLAGS)		\
	$(WARN_CFLAGS)

fake_input_accelerometer_LDADD = $(IIO_SENSOR_PROXY_LIBS)
test_mount_matrix_SOURCES = \
	test-mount-matrix.c			\
	accel-mount-matrix.h			\
	accel-mount-matrix.c

test_mount_matrix_CPPFLAGS = \
	$(IIO_SENSOR_PROXY_CFLAGS)		\
	$(WARN_CFLAGS)

test_mount_matrix_LDADD = $(IIO_SENSOR_PROXY_LIBS)
test_orientation_SOURCES = \
	test-orientation.c			\
	orientation.c				\
	orientation.h				\
	accel-mount-matrix.c			\
	accel-mount-matrix.h

test_orientation_CPPFLAGS = \
	$(IIO_SENSOR_PROXY_CFLAGS)		\
	$(WARN_CFLAGS)

test_orientation_LDADD = $(IIO_SENSOR_PROXY_LIBS) $(LIBM)
test_orientation_gtk_SOURCES = \
	test-orientation-gtk.c			\
	orientation.c				\
	orientation.h

test_orientation_gtk_CPPFLAGS = \
	$(GTK_TESTS_CFLAGS)			\
	$(WARN_CFLAGS)

test_orientation_gtk_LDADD = $(GTK_TESTS_LIBS) $(LIBM)
monitor_sensor_SOURCES = \
	monitor-sensor.c

monitor_sensor_CPPFLAGS = \
	$(IIO_SENSOR_PROXY_CFLAGS)		\
	$(WARN_CFLAGS)

monitor_sensor_LDADD = $(IIO_SENSOR_PROXY_LIBS)
EXTRA_DIST = \
	test-orientation-gtk.c			\
	net.hadess.SensorProxy.xml		\
	iio-sensor-proxy.gresource.xml

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)

fake-input-accelerometer$(EXEEXT): $(fake_input_accelerometer_OBJECTS) $(fake_input_accelerometer_DEPENDENCIES) $(EXTRA_fake_input_accelerometer_DEPENDENCIES) 
	@rm -f fake-input-accelerometer$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fake_input_accelerometer_OBJECTS) $(fake_input_accelerometer_LDADD) $(LIBS)

iio-sensor-proxy$(EXEEXT): $(iio_sensor_proxy_OBJECTS) $(iio_sensor_proxy_DEPENDENCIES) $(EXTRA_iio_sensor_proxy_DEPENDENCIES) 
	@rm -f iio-sensor-proxy$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(iio_sensor_proxy_OBJECTS) $(iio_sensor_proxy_LDADD) $(LIBS)

monitor-sensor$(EXEEXT): $(monitor_sensor_OBJECTS) $(monitor_sensor_DEPENDENCIES) $(EXTRA_monitor_sensor_DEPENDENCIES) 
	@rm -f monitor-sensor$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(monitor_sensor_OBJECTS) $(monitor_sensor_LDADD) $(LIBS)

test-mount-matrix$(EXEEXT): $(test_mount_matrix_OBJECTS) $(test_mount_matrix_DEPENDENCIES) $(EXTRA_test_mount_matrix_DEPENDENCIES) 
	@rm -f test-mount-matrix$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_mount_matrix_OBJECTS) $(test_mount_matrix_LDADD) $(LIBS)

test-orientation$(EXEEXT): $(test_orientation_OBJECTS) $(test_orientation_DEPENDENCIES) $(EXTRA_test_orientation_DEPENDENCIES) 
	@rm -f test-orientation$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_orientation_OBJECTS) $(test_orientation_LDADD) $(LIBS)

test-orientation-gtk$(EXEEXT): $(test_orientation_gtk_OBJECTS) $(test_orientation_gtk_DEPENDENCIES) $(EXTRA_test_orientation_gtk_DEPENDENCIES) 
	@rm -f test-orientation-gtk$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_orientation_gtk_OBJECTS) $(test_orientation_gtk_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/fake_input_accelerometer-fake-input-accelerometer.Po
include ./$(DEPDIR)/iio_sensor_proxy-accel-mount-matrix.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-fake-compass.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-fake-light.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-hwmon-light.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-accel.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-compass.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-light.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-iio-poll-accel.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-iio-poll-light.Po
include ./$(DEPDIR)/iio_sensor_proxy-drv-input-accel.Po
include ./$(DEPDIR)/iio_sensor_proxy-iio-buffer-utils.Po
include ./$(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy-resources.Po
include ./$(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy.Po
include ./$(DEPDIR)/iio_sensor_proxy-orientation.Po
include ./$(DEPDIR)/monitor_sensor-monitor-sensor.Po
include ./$(DEPDIR)/test_mount_matrix-accel-mount-matrix.Po
include ./$(DEPDIR)/test_mount_matrix-test-mount-matrix.Po
include ./$(DEPDIR)/test_orientation-accel-mount-matrix.Po
include ./$(DEPDIR)/test_orientation-orientation.Po
include ./$(DEPDIR)/test_orientation-test-orientation.Po
include ./$(DEPDIR)/test_orientation_gtk-orientation.Po
include ./$(DEPDIR)/test_orientation_gtk-test-orientation-gtk.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

fake_input_accelerometer-fake-input-accelerometer.o: fake-input-accelerometer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fake_input_accelerometer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fake_input_accelerometer-fake-input-accelerometer.o -MD -MP -MF $(DEPDIR)/fake_input_accelerometer-fake-input-accelerometer.Tpo -c -o fake_input_accelerometer-fake-input-accelerometer.o `test -f 'fake-input-accelerometer.c' || echo '$(srcdir)/'`fake-input-accelerometer.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/fake_input_accelerometer-fake-input-accelerometer.Tpo $(DEPDIR)/fake_input_accelerometer-fake-input-accelerometer.Po
#	$(AM_V_CC)source='fake-input-accelerometer.c' object='fake_input_accelerometer-fake-input-accelerometer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fake_input_accelerometer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fake_input_accelerometer-fake-input-accelerometer.o `test -f 'fake-input-accelerometer.c' || echo '$(srcdir)/'`fake-input-accelerometer.c

fake_input_accelerometer-fake-input-accelerometer.obj: fake-input-accelerometer.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fake_input_accelerometer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT fake_input_accelerometer-fake-input-accelerometer.obj -MD -MP -MF $(DEPDIR)/fake_input_accelerometer-fake-input-accelerometer.Tpo -c -o fake_input_accelerometer-fake-input-accelerometer.obj `if test -f 'fake-input-accelerometer.c'; then $(CYGPATH_W) 'fake-input-accelerometer.c'; else $(CYGPATH_W) '$(srcdir)/fake-input-accelerometer.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/fake_input_accelerometer-fake-input-accelerometer.Tpo $(DEPDIR)/fake_input_accelerometer-fake-input-accelerometer.Po
#	$(AM_V_CC)source='fake-input-accelerometer.c' object='fake_input_accelerometer-fake-input-accelerometer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(fake_input_accelerometer_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o fake_input_accelerometer-fake-input-accelerometer.obj `if test -f 'fake-input-accelerometer.c'; then $(CYGPATH_W) 'fake-input-accelerometer.c'; else $(CYGPATH_W) '$(srcdir)/fake-input-accelerometer.c'; fi`

iio_sensor_proxy-iio-sensor-proxy.o: iio-sensor-proxy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-iio-sensor-proxy.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy.Tpo -c -o iio_sensor_proxy-iio-sensor-proxy.o `test -f 'iio-sensor-proxy.c' || echo '$(srcdir)/'`iio-sensor-proxy.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy.Tpo $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy.Po
#	$(AM_V_CC)source='iio-sensor-proxy.c' object='iio_sensor_proxy-iio-sensor-proxy.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-iio-sensor-proxy.o `test -f 'iio-sensor-proxy.c' || echo '$(srcdir)/'`iio-sensor-proxy.c

iio_sensor_proxy-iio-sensor-proxy.obj: iio-sensor-proxy.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-iio-sensor-proxy.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy.Tpo -c -o iio_sensor_proxy-iio-sensor-proxy.obj `if test -f 'iio-sensor-proxy.c'; then $(CYGPATH_W) 'iio-sensor-proxy.c'; else $(CYGPATH_W) '$(srcdir)/iio-sensor-proxy.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy.Tpo $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy.Po
#	$(AM_V_CC)source='iio-sensor-proxy.c' object='iio_sensor_proxy-iio-sensor-proxy.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-iio-sensor-proxy.obj `if test -f 'iio-sensor-proxy.c'; then $(CYGPATH_W) 'iio-sensor-proxy.c'; else $(CYGPATH_W) '$(srcdir)/iio-sensor-proxy.c'; fi`

iio_sensor_proxy-orientation.o: orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-orientation.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-orientation.Tpo -c -o iio_sensor_proxy-orientation.o `test -f 'orientation.c' || echo '$(srcdir)/'`orientation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-orientation.Tpo $(DEPDIR)/iio_sensor_proxy-orientation.Po
#	$(AM_V_CC)source='orientation.c' object='iio_sensor_proxy-orientation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-orientation.o `test -f 'orientation.c' || echo '$(srcdir)/'`orientation.c

iio_sensor_proxy-orientation.obj: orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-orientation.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-orientation.Tpo -c -o iio_sensor_proxy-orientation.obj `if test -f 'orientation.c'; then $(CYGPATH_W) 'orientation.c'; else $(CYGPATH_W) '$(srcdir)/orientation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-orientation.Tpo $(DEPDIR)/iio_sensor_proxy-orientation.Po
#	$(AM_V_CC)source='orientation.c' object='iio_sensor_proxy-orientation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-orientation.obj `if test -f 'orientation.c'; then $(CYGPATH_W) 'orientation.c'; else $(CYGPATH_W) '$(srcdir)/orientation.c'; fi`

iio_sensor_proxy-drv-iio-buffer-accel.o: drv-iio-buffer-accel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-buffer-accel.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-accel.Tpo -c -o iio_sensor_proxy-drv-iio-buffer-accel.o `test -f 'drv-iio-buffer-accel.c' || echo '$(srcdir)/'`drv-iio-buffer-accel.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-accel.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-accel.Po
#	$(AM_V_CC)source='drv-iio-buffer-accel.c' object='iio_sensor_proxy-drv-iio-buffer-accel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-buffer-accel.o `test -f 'drv-iio-buffer-accel.c' || echo '$(srcdir)/'`drv-iio-buffer-accel.c

iio_sensor_proxy-drv-iio-buffer-accel.obj: drv-iio-buffer-accel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-buffer-accel.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-accel.Tpo -c -o iio_sensor_proxy-drv-iio-buffer-accel.obj `if test -f 'drv-iio-buffer-accel.c'; then $(CYGPATH_W) 'drv-iio-buffer-accel.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-buffer-accel.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-accel.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-accel.Po
#	$(AM_V_CC)source='drv-iio-buffer-accel.c' object='iio_sensor_proxy-drv-iio-buffer-accel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-buffer-accel.obj `if test -f 'drv-iio-buffer-accel.c'; then $(CYGPATH_W) 'drv-iio-buffer-accel.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-buffer-accel.c'; fi`

iio_sensor_proxy-drv-iio-poll-accel.o: drv-iio-poll-accel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-poll-accel.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-accel.Tpo -c -o iio_sensor_proxy-drv-iio-poll-accel.o `test -f 'drv-iio-poll-accel.c' || echo '$(srcdir)/'`drv-iio-poll-accel.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-accel.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-accel.Po
#	$(AM_V_CC)source='drv-iio-poll-accel.c' object='iio_sensor_proxy-drv-iio-poll-accel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-poll-accel.o `test -f 'drv-iio-poll-accel.c' || echo '$(srcdir)/'`drv-iio-poll-accel.c

iio_sensor_proxy-drv-iio-poll-accel.obj: drv-iio-poll-accel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-poll-accel.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-accel.Tpo -c -o iio_sensor_proxy-drv-iio-poll-accel.obj `if test -f 'drv-iio-poll-accel.c'; then $(CYGPATH_W) 'drv-iio-poll-accel.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-poll-accel.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-accel.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-accel.Po
#	$(AM_V_CC)source='drv-iio-poll-accel.c' object='iio_sensor_proxy-drv-iio-poll-accel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-poll-accel.obj `if test -f 'drv-iio-poll-accel.c'; then $(CYGPATH_W) 'drv-iio-poll-accel.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-poll-accel.c'; fi`

iio_sensor_proxy-drv-input-accel.o: drv-input-accel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-input-accel.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-input-accel.Tpo -c -o iio_sensor_proxy-drv-input-accel.o `test -f 'drv-input-accel.c' || echo '$(srcdir)/'`drv-input-accel.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-input-accel.Tpo $(DEPDIR)/iio_sensor_proxy-drv-input-accel.Po
#	$(AM_V_CC)source='drv-input-accel.c' object='iio_sensor_proxy-drv-input-accel.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-input-accel.o `test -f 'drv-input-accel.c' || echo '$(srcdir)/'`drv-input-accel.c

iio_sensor_proxy-drv-input-accel.obj: drv-input-accel.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-input-accel.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-input-accel.Tpo -c -o iio_sensor_proxy-drv-input-accel.obj `if test -f 'drv-input-accel.c'; then $(CYGPATH_W) 'drv-input-accel.c'; else $(CYGPATH_W) '$(srcdir)/drv-input-accel.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-input-accel.Tpo $(DEPDIR)/iio_sensor_proxy-drv-input-accel.Po
#	$(AM_V_CC)source='drv-input-accel.c' object='iio_sensor_proxy-drv-input-accel.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-input-accel.obj `if test -f 'drv-input-accel.c'; then $(CYGPATH_W) 'drv-input-accel.c'; else $(CYGPATH_W) '$(srcdir)/drv-input-accel.c'; fi`

iio_sensor_proxy-drv-fake-compass.o: drv-fake-compass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-fake-compass.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-fake-compass.Tpo -c -o iio_sensor_proxy-drv-fake-compass.o `test -f 'drv-fake-compass.c' || echo '$(srcdir)/'`drv-fake-compass.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-fake-compass.Tpo $(DEPDIR)/iio_sensor_proxy-drv-fake-compass.Po
#	$(AM_V_CC)source='drv-fake-compass.c' object='iio_sensor_proxy-drv-fake-compass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-fake-compass.o `test -f 'drv-fake-compass.c' || echo '$(srcdir)/'`drv-fake-compass.c

iio_sensor_proxy-drv-fake-compass.obj: drv-fake-compass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-fake-compass.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-fake-compass.Tpo -c -o iio_sensor_proxy-drv-fake-compass.obj `if test -f 'drv-fake-compass.c'; then $(CYGPATH_W) 'drv-fake-compass.c'; else $(CYGPATH_W) '$(srcdir)/drv-fake-compass.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-fake-compass.Tpo $(DEPDIR)/iio_sensor_proxy-drv-fake-compass.Po
#	$(AM_V_CC)source='drv-fake-compass.c' object='iio_sensor_proxy-drv-fake-compass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-fake-compass.obj `if test -f 'drv-fake-compass.c'; then $(CYGPATH_W) 'drv-fake-compass.c'; else $(CYGPATH_W) '$(srcdir)/drv-fake-compass.c'; fi`

iio_sensor_proxy-drv-fake-light.o: drv-fake-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-fake-light.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-fake-light.Tpo -c -o iio_sensor_proxy-drv-fake-light.o `test -f 'drv-fake-light.c' || echo '$(srcdir)/'`drv-fake-light.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-fake-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-fake-light.Po
#	$(AM_V_CC)source='drv-fake-light.c' object='iio_sensor_proxy-drv-fake-light.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-fake-light.o `test -f 'drv-fake-light.c' || echo '$(srcdir)/'`drv-fake-light.c

iio_sensor_proxy-drv-fake-light.obj: drv-fake-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-fake-light.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-fake-light.Tpo -c -o iio_sensor_proxy-drv-fake-light.obj `if test -f 'drv-fake-light.c'; then $(CYGPATH_W) 'drv-fake-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-fake-light.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-fake-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-fake-light.Po
#	$(AM_V_CC)source='drv-fake-light.c' object='iio_sensor_proxy-drv-fake-light.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-fake-light.obj `if test -f 'drv-fake-light.c'; then $(CYGPATH_W) 'drv-fake-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-fake-light.c'; fi`

iio_sensor_proxy-drv-iio-poll-light.o: drv-iio-poll-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-poll-light.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-light.Tpo -c -o iio_sensor_proxy-drv-iio-poll-light.o `test -f 'drv-iio-poll-light.c' || echo '$(srcdir)/'`drv-iio-poll-light.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-light.Po
#	$(AM_V_CC)source='drv-iio-poll-light.c' object='iio_sensor_proxy-drv-iio-poll-light.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-poll-light.o `test -f 'drv-iio-poll-light.c' || echo '$(srcdir)/'`drv-iio-poll-light.c

iio_sensor_proxy-drv-iio-poll-light.obj: drv-iio-poll-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-poll-light.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-light.Tpo -c -o iio_sensor_proxy-drv-iio-poll-light.obj `if test -f 'drv-iio-poll-light.c'; then $(CYGPATH_W) 'drv-iio-poll-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-poll-light.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-poll-light.Po
#	$(AM_V_CC)source='drv-iio-poll-light.c' object='iio_sensor_proxy-drv-iio-poll-light.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-poll-light.obj `if test -f 'drv-iio-poll-light.c'; then $(CYGPATH_W) 'drv-iio-poll-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-poll-light.c'; fi`

iio_sensor_proxy-drv-hwmon-light.o: drv-hwmon-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-hwmon-light.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-hwmon-light.Tpo -c -o iio_sensor_proxy-drv-hwmon-light.o `test -f 'drv-hwmon-light.c' || echo '$(srcdir)/'`drv-hwmon-light.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-hwmon-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-hwmon-light.Po
#	$(AM_V_CC)source='drv-hwmon-light.c' object='iio_sensor_proxy-drv-hwmon-light.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-hwmon-light.o `test -f 'drv-hwmon-light.c' || echo '$(srcdir)/'`drv-hwmon-light.c

iio_sensor_proxy-drv-hwmon-light.obj: drv-hwmon-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-hwmon-light.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-hwmon-light.Tpo -c -o iio_sensor_proxy-drv-hwmon-light.obj `if test -f 'drv-hwmon-light.c'; then $(CYGPATH_W) 'drv-hwmon-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-hwmon-light.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-hwmon-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-hwmon-light.Po
#	$(AM_V_CC)source='drv-hwmon-light.c' object='iio_sensor_proxy-drv-hwmon-light.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-hwmon-light.obj `if test -f 'drv-hwmon-light.c'; then $(CYGPATH_W) 'drv-hwmon-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-hwmon-light.c'; fi`

iio_sensor_proxy-drv-iio-buffer-light.o: drv-iio-buffer-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-buffer-light.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-light.Tpo -c -o iio_sensor_proxy-drv-iio-buffer-light.o `test -f 'drv-iio-buffer-light.c' || echo '$(srcdir)/'`drv-iio-buffer-light.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-light.Po
#	$(AM_V_CC)source='drv-iio-buffer-light.c' object='iio_sensor_proxy-drv-iio-buffer-light.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-buffer-light.o `test -f 'drv-iio-buffer-light.c' || echo '$(srcdir)/'`drv-iio-buffer-light.c

iio_sensor_proxy-drv-iio-buffer-light.obj: drv-iio-buffer-light.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-buffer-light.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-light.Tpo -c -o iio_sensor_proxy-drv-iio-buffer-light.obj `if test -f 'drv-iio-buffer-light.c'; then $(CYGPATH_W) 'drv-iio-buffer-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-buffer-light.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-light.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-light.Po
#	$(AM_V_CC)source='drv-iio-buffer-light.c' object='iio_sensor_proxy-drv-iio-buffer-light.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-buffer-light.obj `if test -f 'drv-iio-buffer-light.c'; then $(CYGPATH_W) 'drv-iio-buffer-light.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-buffer-light.c'; fi`

iio_sensor_proxy-drv-iio-buffer-compass.o: drv-iio-buffer-compass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-buffer-compass.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-compass.Tpo -c -o iio_sensor_proxy-drv-iio-buffer-compass.o `test -f 'drv-iio-buffer-compass.c' || echo '$(srcdir)/'`drv-iio-buffer-compass.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-compass.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-compass.Po
#	$(AM_V_CC)source='drv-iio-buffer-compass.c' object='iio_sensor_proxy-drv-iio-buffer-compass.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-buffer-compass.o `test -f 'drv-iio-buffer-compass.c' || echo '$(srcdir)/'`drv-iio-buffer-compass.c

iio_sensor_proxy-drv-iio-buffer-compass.obj: drv-iio-buffer-compass.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-drv-iio-buffer-compass.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-compass.Tpo -c -o iio_sensor_proxy-drv-iio-buffer-compass.obj `if test -f 'drv-iio-buffer-compass.c'; then $(CYGPATH_W) 'drv-iio-buffer-compass.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-buffer-compass.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-compass.Tpo $(DEPDIR)/iio_sensor_proxy-drv-iio-buffer-compass.Po
#	$(AM_V_CC)source='drv-iio-buffer-compass.c' object='iio_sensor_proxy-drv-iio-buffer-compass.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-drv-iio-buffer-compass.obj `if test -f 'drv-iio-buffer-compass.c'; then $(CYGPATH_W) 'drv-iio-buffer-compass.c'; else $(CYGPATH_W) '$(srcdir)/drv-iio-buffer-compass.c'; fi`

iio_sensor_proxy-iio-buffer-utils.o: iio-buffer-utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-iio-buffer-utils.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-iio-buffer-utils.Tpo -c -o iio_sensor_proxy-iio-buffer-utils.o `test -f 'iio-buffer-utils.c' || echo '$(srcdir)/'`iio-buffer-utils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-iio-buffer-utils.Tpo $(DEPDIR)/iio_sensor_proxy-iio-buffer-utils.Po
#	$(AM_V_CC)source='iio-buffer-utils.c' object='iio_sensor_proxy-iio-buffer-utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-iio-buffer-utils.o `test -f 'iio-buffer-utils.c' || echo '$(srcdir)/'`iio-buffer-utils.c

iio_sensor_proxy-iio-buffer-utils.obj: iio-buffer-utils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-iio-buffer-utils.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-iio-buffer-utils.Tpo -c -o iio_sensor_proxy-iio-buffer-utils.obj `if test -f 'iio-buffer-utils.c'; then $(CYGPATH_W) 'iio-buffer-utils.c'; else $(CYGPATH_W) '$(srcdir)/iio-buffer-utils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-iio-buffer-utils.Tpo $(DEPDIR)/iio_sensor_proxy-iio-buffer-utils.Po
#	$(AM_V_CC)source='iio-buffer-utils.c' object='iio_sensor_proxy-iio-buffer-utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-iio-buffer-utils.obj `if test -f 'iio-buffer-utils.c'; then $(CYGPATH_W) 'iio-buffer-utils.c'; else $(CYGPATH_W) '$(srcdir)/iio-buffer-utils.c'; fi`

iio_sensor_proxy-accel-mount-matrix.o: accel-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-accel-mount-matrix.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-accel-mount-matrix.Tpo -c -o iio_sensor_proxy-accel-mount-matrix.o `test -f 'accel-mount-matrix.c' || echo '$(srcdir)/'`accel-mount-matrix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-accel-mount-matrix.Tpo $(DEPDIR)/iio_sensor_proxy-accel-mount-matrix.Po
#	$(AM_V_CC)source='accel-mount-matrix.c' object='iio_sensor_proxy-accel-mount-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-accel-mount-matrix.o `test -f 'accel-mount-matrix.c' || echo '$(srcdir)/'`accel-mount-matrix.c

iio_sensor_proxy-accel-mount-matrix.obj: accel-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-accel-mount-matrix.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-accel-mount-matrix.Tpo -c -o iio_sensor_proxy-accel-mount-matrix.obj `if test -f 'accel-mount-matrix.c'; then $(CYGPATH_W) 'accel-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/accel-mount-matrix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-accel-mount-matrix.Tpo $(DEPDIR)/iio_sensor_proxy-accel-mount-matrix.Po
#	$(AM_V_CC)source='accel-mount-matrix.c' object='iio_sensor_proxy-accel-mount-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-accel-mount-matrix.obj `if test -f 'accel-mount-matrix.c'; then $(CYGPATH_W) 'accel-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/accel-mount-matrix.c'; fi`

iio_sensor_proxy-iio-sensor-proxy-resources.o: iio-sensor-proxy-resources.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-iio-sensor-proxy-resources.o -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy-resources.Tpo -c -o iio_sensor_proxy-iio-sensor-proxy-resources.o `test -f 'iio-sensor-proxy-resources.c' || echo '$(srcdir)/'`iio-sensor-proxy-resources.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy-resources.Tpo $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy-resources.Po
#	$(AM_V_CC)source='iio-sensor-proxy-resources.c' object='iio_sensor_proxy-iio-sensor-proxy-resources.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-iio-sensor-proxy-resources.o `test -f 'iio-sensor-proxy-resources.c' || echo '$(srcdir)/'`iio-sensor-proxy-resources.c

iio_sensor_proxy-iio-sensor-proxy-resources.obj: iio-sensor-proxy-resources.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT iio_sensor_proxy-iio-sensor-proxy-resources.obj -MD -MP -MF $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy-resources.Tpo -c -o iio_sensor_proxy-iio-sensor-proxy-resources.obj `if test -f 'iio-sensor-proxy-resources.c'; then $(CYGPATH_W) 'iio-sensor-proxy-resources.c'; else $(CYGPATH_W) '$(srcdir)/iio-sensor-proxy-resources.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy-resources.Tpo $(DEPDIR)/iio_sensor_proxy-iio-sensor-proxy-resources.Po
#	$(AM_V_CC)source='iio-sensor-proxy-resources.c' object='iio_sensor_proxy-iio-sensor-proxy-resources.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(iio_sensor_proxy_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o iio_sensor_proxy-iio-sensor-proxy-resources.obj `if test -f 'iio-sensor-proxy-resources.c'; then $(CYGPATH_W) 'iio-sensor-proxy-resources.c'; else $(CYGPATH_W) '$(srcdir)/iio-sensor-proxy-resources.c'; fi`

monitor_sensor-monitor-sensor.o: monitor-sensor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(monitor_sensor_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT monitor_sensor-monitor-sensor.o -MD -MP -MF $(DEPDIR)/monitor_sensor-monitor-sensor.Tpo -c -o monitor_sensor-monitor-sensor.o `test -f 'monitor-sensor.c' || echo '$(srcdir)/'`monitor-sensor.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/monitor_sensor-monitor-sensor.Tpo $(DEPDIR)/monitor_sensor-monitor-sensor.Po
#	$(AM_V_CC)source='monitor-sensor.c' object='monitor_sensor-monitor-sensor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(monitor_sensor_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o monitor_sensor-monitor-sensor.o `test -f 'monitor-sensor.c' || echo '$(srcdir)/'`monitor-sensor.c

monitor_sensor-monitor-sensor.obj: monitor-sensor.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(monitor_sensor_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT monitor_sensor-monitor-sensor.obj -MD -MP -MF $(DEPDIR)/monitor_sensor-monitor-sensor.Tpo -c -o monitor_sensor-monitor-sensor.obj `if test -f 'monitor-sensor.c'; then $(CYGPATH_W) 'monitor-sensor.c'; else $(CYGPATH_W) '$(srcdir)/monitor-sensor.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/monitor_sensor-monitor-sensor.Tpo $(DEPDIR)/monitor_sensor-monitor-sensor.Po
#	$(AM_V_CC)source='monitor-sensor.c' object='monitor_sensor-monitor-sensor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(monitor_sensor_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o monitor_sensor-monitor-sensor.obj `if test -f 'monitor-sensor.c'; then $(CYGPATH_W) 'monitor-sensor.c'; else $(CYGPATH_W) '$(srcdir)/monitor-sensor.c'; fi`

test_mount_matrix-test-mount-matrix.o: test-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_mount_matrix-test-mount-matrix.o -MD -MP -MF $(DEPDIR)/test_mount_matrix-test-mount-matrix.Tpo -c -o test_mount_matrix-test-mount-matrix.o `test -f 'test-mount-matrix.c' || echo '$(srcdir)/'`test-mount-matrix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mount_matrix-test-mount-matrix.Tpo $(DEPDIR)/test_mount_matrix-test-mount-matrix.Po
#	$(AM_V_CC)source='test-mount-matrix.c' object='test_mount_matrix-test-mount-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_mount_matrix-test-mount-matrix.o `test -f 'test-mount-matrix.c' || echo '$(srcdir)/'`test-mount-matrix.c

test_mount_matrix-test-mount-matrix.obj: test-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_mount_matrix-test-mount-matrix.obj -MD -MP -MF $(DEPDIR)/test_mount_matrix-test-mount-matrix.Tpo -c -o test_mount_matrix-test-mount-matrix.obj `if test -f 'test-mount-matrix.c'; then $(CYGPATH_W) 'test-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/test-mount-matrix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mount_matrix-test-mount-matrix.Tpo $(DEPDIR)/test_mount_matrix-test-mount-matrix.Po
#	$(AM_V_CC)source='test-mount-matrix.c' object='test_mount_matrix-test-mount-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_mount_matrix-test-mount-matrix.obj `if test -f 'test-mount-matrix.c'; then $(CYGPATH_W) 'test-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/test-mount-matrix.c'; fi`

test_mount_matrix-accel-mount-matrix.o: accel-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_mount_matrix-accel-mount-matrix.o -MD -MP -MF $(DEPDIR)/test_mount_matrix-accel-mount-matrix.Tpo -c -o test_mount_matrix-accel-mount-matrix.o `test -f 'accel-mount-matrix.c' || echo '$(srcdir)/'`accel-mount-matrix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mount_matrix-accel-mount-matrix.Tpo $(DEPDIR)/test_mount_matrix-accel-mount-matrix.Po
#	$(AM_V_CC)source='accel-mount-matrix.c' object='test_mount_matrix-accel-mount-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_mount_matrix-accel-mount-matrix.o `test -f 'accel-mount-matrix.c' || echo '$(srcdir)/'`accel-mount-matrix.c

test_mount_matrix-accel-mount-matrix.obj: accel-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_mount_matrix-accel-mount-matrix.obj -MD -MP -MF $(DEPDIR)/test_mount_matrix-accel-mount-matrix.Tpo -c -o test_mount_matrix-accel-mount-matrix.obj `if test -f 'accel-mount-matrix.c'; then $(CYGPATH_W) 'accel-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/accel-mount-matrix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_mount_matrix-accel-mount-matrix.Tpo $(DEPDIR)/test_mount_matrix-accel-mount-matrix.Po
#	$(AM_V_CC)source='accel-mount-matrix.c' object='test_mount_matrix-accel-mount-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_mount_matrix_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_mount_matrix-accel-mount-matrix.obj `if test -f 'accel-mount-matrix.c'; then $(CYGPATH_W) 'accel-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/accel-mount-matrix.c'; fi`

test_orientation-test-orientation.o: test-orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation-test-orientation.o -MD -MP -MF $(DEPDIR)/test_orientation-test-orientation.Tpo -c -o test_orientation-test-orientation.o `test -f 'test-orientation.c' || echo '$(srcdir)/'`test-orientation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation-test-orientation.Tpo $(DEPDIR)/test_orientation-test-orientation.Po
#	$(AM_V_CC)source='test-orientation.c' object='test_orientation-test-orientation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation-test-orientation.o `test -f 'test-orientation.c' || echo '$(srcdir)/'`test-orientation.c

test_orientation-test-orientation.obj: test-orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation-test-orientation.obj -MD -MP -MF $(DEPDIR)/test_orientation-test-orientation.Tpo -c -o test_orientation-test-orientation.obj `if test -f 'test-orientation.c'; then $(CYGPATH_W) 'test-orientation.c'; else $(CYGPATH_W) '$(srcdir)/test-orientation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation-test-orientation.Tpo $(DEPDIR)/test_orientation-test-orientation.Po
#	$(AM_V_CC)source='test-orientation.c' object='test_orientation-test-orientation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation-test-orientation.obj `if test -f 'test-orientation.c'; then $(CYGPATH_W) 'test-orientation.c'; else $(CYGPATH_W) '$(srcdir)/test-orientation.c'; fi`

test_orientation-orientation.o: orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation-orientation.o -MD -MP -MF $(DEPDIR)/test_orientation-orientation.Tpo -c -o test_orientation-orientation.o `test -f 'orientation.c' || echo '$(srcdir)/'`orientation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation-orientation.Tpo $(DEPDIR)/test_orientation-orientation.Po
#	$(AM_V_CC)source='orientation.c' object='test_orientation-orientation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation-orientation.o `test -f 'orientation.c' || echo '$(srcdir)/'`orientation.c

test_orientation-orientation.obj: orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation-orientation.obj -MD -MP -MF $(DEPDIR)/test_orientation-orientation.Tpo -c -o test_orientation-orientation.obj `if test -f 'orientation.c'; then $(CYGPATH_W) 'orientation.c'; else $(CYGPATH_W) '$(srcdir)/orientation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation-orientation.Tpo $(DEPDIR)/test_orientation-orientation.Po
#	$(AM_V_CC)source='orientation.c' object='test_orientation-orientation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation-orientation.obj `if test -f 'orientation.c'; then $(CYGPATH_W) 'orientation.c'; else $(CYGPATH_W) '$(srcdir)/orientation.c'; fi`

test_orientation-accel-mount-matrix.o: accel-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation-accel-mount-matrix.o -MD -MP -MF $(DEPDIR)/test_orientation-accel-mount-matrix.Tpo -c -o test_orientation-accel-mount-matrix.o `test -f 'accel-mount-matrix.c' || echo '$(srcdir)/'`accel-mount-matrix.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation-accel-mount-matrix.Tpo $(DEPDIR)/test_orientation-accel-mount-matrix.Po
#	$(AM_V_CC)source='accel-mount-matrix.c' object='test_orientation-accel-mount-matrix.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation-accel-mount-matrix.o `test -f 'accel-mount-matrix.c' || echo '$(srcdir)/'`accel-mount-matrix.c

test_orientation-accel-mount-matrix.obj: accel-mount-matrix.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation-accel-mount-matrix.obj -MD -MP -MF $(DEPDIR)/test_orientation-accel-mount-matrix.Tpo -c -o test_orientation-accel-mount-matrix.obj `if test -f 'accel-mount-matrix.c'; then $(CYGPATH_W) 'accel-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/accel-mount-matrix.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation-accel-mount-matrix.Tpo $(DEPDIR)/test_orientation-accel-mount-matrix.Po
#	$(AM_V_CC)source='accel-mount-matrix.c' object='test_orientation-accel-mount-matrix.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation-accel-mount-matrix.obj `if test -f 'accel-mount-matrix.c'; then $(CYGPATH_W) 'accel-mount-matrix.c'; else $(CYGPATH_W) '$(srcdir)/accel-mount-matrix.c'; fi`

test_orientation_gtk-test-orientation-gtk.o: test-orientation-gtk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation_gtk-test-orientation-gtk.o -MD -MP -MF $(DEPDIR)/test_orientation_gtk-test-orientation-gtk.Tpo -c -o test_orientation_gtk-test-orientation-gtk.o `test -f 'test-orientation-gtk.c' || echo '$(srcdir)/'`test-orientation-gtk.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation_gtk-test-orientation-gtk.Tpo $(DEPDIR)/test_orientation_gtk-test-orientation-gtk.Po
#	$(AM_V_CC)source='test-orientation-gtk.c' object='test_orientation_gtk-test-orientation-gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation_gtk-test-orientation-gtk.o `test -f 'test-orientation-gtk.c' || echo '$(srcdir)/'`test-orientation-gtk.c

test_orientation_gtk-test-orientation-gtk.obj: test-orientation-gtk.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation_gtk-test-orientation-gtk.obj -MD -MP -MF $(DEPDIR)/test_orientation_gtk-test-orientation-gtk.Tpo -c -o test_orientation_gtk-test-orientation-gtk.obj `if test -f 'test-orientation-gtk.c'; then $(CYGPATH_W) 'test-orientation-gtk.c'; else $(CYGPATH_W) '$(srcdir)/test-orientation-gtk.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation_gtk-test-orientation-gtk.Tpo $(DEPDIR)/test_orientation_gtk-test-orientation-gtk.Po
#	$(AM_V_CC)source='test-orientation-gtk.c' object='test_orientation_gtk-test-orientation-gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation_gtk-test-orientation-gtk.obj `if test -f 'test-orientation-gtk.c'; then $(CYGPATH_W) 'test-orientation-gtk.c'; else $(CYGPATH_W) '$(srcdir)/test-orientation-gtk.c'; fi`

test_orientation_gtk-orientation.o: orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation_gtk-orientation.o -MD -MP -MF $(DEPDIR)/test_orientation_gtk-orientation.Tpo -c -o test_orientation_gtk-orientation.o `test -f 'orientation.c' || echo '$(srcdir)/'`orientation.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation_gtk-orientation.Tpo $(DEPDIR)/test_orientation_gtk-orientation.Po
#	$(AM_V_CC)source='orientation.c' object='test_orientation_gtk-orientation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation_gtk-orientation.o `test -f 'orientation.c' || echo '$(srcdir)/'`orientation.c

test_orientation_gtk-orientation.obj: orientation.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT test_orientation_gtk-orientation.obj -MD -MP -MF $(DEPDIR)/test_orientation_gtk-orientation.Tpo -c -o test_orientation_gtk-orientation.obj `if test -f 'orientation.c'; then $(CYGPATH_W) 'orientation.c'; else $(CYGPATH_W) '$(srcdir)/orientation.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/test_orientation_gtk-orientation.Tpo $(DEPDIR)/test_orientation_gtk-orientation.Po
#	$(AM_V_CC)source='orientation.c' object='test_orientation_gtk-orientation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_orientation_gtk_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o test_orientation_gtk-orientation.obj `if test -f 'orientation.c'; then $(CYGPATH_W) 'orientation.c'; else $(CYGPATH_W) '$(srcdir)/orientation.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(sbindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-sbinPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-sbinPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	clean-sbinPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-sbinPROGRAMS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-sbinPROGRAMS

.PRECIOUS: Makefile

iio-sensor-proxy-resources.c: iio-sensor-proxy.gresource.xml $(resource_files)
	$(AM_V_GEN) glib-compile-resources --target=$@ --sourcedir=$(srcdir) --generate-source --c-name iio_sensor_proxy $<
iio-sensor-proxy-resources.h: iio-sensor-proxy.gresource.xml $(resource_files)
	$(AM_V_GEN) glib-compile-resources --target=$@ --sourcedir=$(srcdir) --generate-header --c-name iio_sensor_proxy $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
